apiVersion: apps/v1
kind: Deployment
metadata:
  name: &name server
  labels:
    app: *name
spec:
  replicas: 1
  selector:
    matchLabels:
      app: *name
  template:
    metadata:
      labels:
        app: *name
    spec:
      # tolerations:
      #   - key: "node-role.kubernetes.io/master"
      #     operator: "Exists"
      #
      # # above OR below needed ONLY, not both
      # #
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #       - matchExpressions:
      #         - key: node-role.kubernetes.io/master
      #           operator: Exists
      containers:
      - image: docker.io/alexeldeib/server:latest
        name: server
        - containerPort: 8080
          name: http
        resources:
          requests: {}
          limits: {}
---
apiVersion: v1
kind: Service
metadata:
  name: server
spec:
  selector:
    app: server
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: &name proxy
  labels:
    app: *name
spec:
  replicas: 1
  selector:
    matchLabels:
      app: *name
  template:
    metadata:
      labels:
        app: *name
    spec:
      # tolerations:
      #   - key: "node-role.kubernetes.io/master"
      #     operator: "Exists"
      #
      # # above OR below needed ONLY, not both
      # #
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #       - matchExpressions:
      #         - key: node-role.kubernetes.io/master
      #           operator: Exists
      initContainers:
      - image: registry.k8s.io/build-image/distroless-iptables:v0.4.2
        name: proxy
        command:
        - iptables-restore
        - /data/iptables.conf
        volumeMounts:
        - name: proxyconf
          mountPath: /data/iptables.conf
          subPath: iptables.conf
      containers:
      - image: docker.io/alexeldeib/proxy:latest
        name: proxy
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests: {}
          limits: {}  
      volumes:
      - name: proxyconf
        configMap:
          name: proxyconf
---
apiVersion: v1
kind: Service
metadata:
  name: proxy
spec:
  selector:
    app: proxy
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: proxyconf
data:
  iptables.conf: |-
    # Generated by iptables-save v1.8.9 (nf_tables) on Thu Nov 23 17:34:17 2023
    # *filter
    # :INPUT ACCEPT [0:0]
    # :FORWARD ACCEPT [0:0]
    # :OUTPUT ACCEPT [0:0]
    # -A OUTPUT -d 10.0.0.0/8 -j REJECT --reject-with icmp-port-unreachable
    # -A OUTPUT -s 172.16.0.0/12 -j REJECT --reject-with icmp-port-unreachable
    # -A OUTPUT -s 192.168.0.0/16 -j REJECT --reject-with icmp-port-unreachable
    # -A OUTPUT -s 100.64.0.0/10 -j REJECT --reject-with icmp-port-unreachable
    # COMMIT
---
